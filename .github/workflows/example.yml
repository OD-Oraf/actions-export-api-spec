name: Example - Export API Specs from MuleSoft Exchange

on:
  workflow_dispatch:
    inputs:
      organization_id:
        description: 'MuleSoft Organization ID'
        required: true
        type: string
        default: '1bb53e2e-0362-40c7-80cc-273290c8d74b'
      asset_id:
        description: 'Specific Asset ID (optional)'
        required: false
        type: string
        default: 'openapi'
      group_id:
        description: 'Group ID filter (optional)'
        required: false
        type: string
        default: '1bb53e2e-0362-40c7-80cc-273290c8d74b'
  
#  schedule:
#    # Run every Monday at 2 AM UTC
#    - cron: '0 2 * * 1'

jobs:
  export-api-specs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Export API Specs from MuleSoft Anypoint Exchange
        uses: ./
        id: export-specs
        env:
          CLIENT_ID: ${{  secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{  secrets.CLIENT_SECRET }}
        with:
          organization-id: ${{ github.event.inputs.organization_id || vars.MULESOFT_ORG_ID }}
          asset-id: ${{ github.event.inputs.asset_id }}
          group-id: ${{ github.event.inputs.group_id }}
          output-directory: 'mulesoft-api-specs'
          include-documentation: 'true'
          include-metadata: 'true'
      
      - name: Display export results
        run: |
          echo "🎉 Export completed successfully!"
          echo "📊 Number of API specs downloaded: ${{ steps.export-specs.outputs.specs-count }}"
          echo "📁 Files saved to: ${{ steps.export-specs.outputs.output-path }}"
          echo ""
          echo "📋 Directory contents:"
          ls -la mulesoft-api-specs/ || echo "No files found"
          
          if [ -f "mulesoft-api-specs/download_summary.json" ]; then
            echo ""
            echo "📄 Download Summary:"
            cat mulesoft-api-specs/download_summary.json
          fi
      
      - name: Create deployment info
        run: |
          echo "# MuleSoft API Specs Export Results" > export-results.md
          echo "" >> export-results.md
          echo "**Export Date:** $(date)" >> export-results.md
          echo "**Specs Downloaded:** ${{ steps.export-specs.outputs.specs-count }}" >> export-results.md
          echo "**Output Path:** ${{ steps.export-specs.outputs.output-path }}" >> export-results.md
          echo "" >> export-results.md
          echo "## Files Downloaded" >> export-results.md
          
          if [ -d "mulesoft-api-specs" ]; then
            find mulesoft-api-specs -type f -name "*.yaml" -o -name "*.yml" -o -name "*.json" | while read file; do
              echo "- \`$file\`" >> export-results.md
            done
          fi
      
      - name: Upload export results summary
        uses: actions/upload-artifact@v3
        with:
          name: export-summary
          path: export-results.md
          retention-days: 90
      
      # Note: The main API specs artifact is automatically uploaded by the action
      # with the name 'mulesoft-api-specs'
